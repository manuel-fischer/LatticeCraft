namespace world
{
	namespace chunkUtil
	{
		# Try to improve performance
		function forEachBlock2(chunk, x0, y0, x1, y1, xOff, yOff, func, shift)
		{
			shift(x0, y0);
			var yyii = 16*y0-xOff;
			for var yy in y0+yOff:y1+yOff do
			{
				for var xx in x0+xOff:x1+xOff do
				{
					func(chunk[xx+yyii], xx, yy);
					shift(1, 0);
				}
				shift(x0-x1, 1);
				yyii+=16;
			}
				
			shift(-x0, -y1);
		}
		
		
		
		function forEachBlock3(chunk, x0, y0, x1, y1, xOff, yOff, func, shift)
		{
			var stride = 16 + x0 - x1;
			var xback = -16+stride;
			var i = x0 + 16*y0;
			var rx = x0+xOff:x1+xOff, ry = y0+yOff:y1+yOff;
			var colFunc = [
				null,
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i], x0, y); shift( 0, 1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift(-1, 1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift(-2, 1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift(-3, 1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift(-4, 1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift(-5, 1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift( 1, 0);
					func(chunk[i+6], x0+6, y);  shift(-6, 1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift( 1, 0);
					func(chunk[i+6], x0+6, y);  shift( 1, 0);
					func(chunk[i+7], x0+7, y);  shift(-7, 1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift( 1, 0);
					func(chunk[i+6], x0+6, y);  shift( 1, 0);
					func(chunk[i+7], x0+7, y);  shift( 1, 0);
					func(chunk[i+8], x0+8, y);  shift(-8, 1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift( 1, 0);
					func(chunk[i+6], x0+6, y);  shift( 1, 0);
					func(chunk[i+7], x0+7, y);  shift( 1, 0);
					func(chunk[i+8], x0+8, y);  shift( 1, 0);
					func(chunk[i+9], x0+9, y);  shift(-9, 1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift( 1, 0);
					func(chunk[i+6], x0+6, y);  shift( 1, 0);
					func(chunk[i+7], x0+7, y);  shift( 1, 0);
					func(chunk[i+8], x0+8, y);  shift( 1, 0);
					func(chunk[i+9], x0+9, y);  shift( 1, 0);
					func(chunk[i+10],x0+10,y);  shift(-10,1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift( 1, 0);
					func(chunk[i+6], x0+6, y);  shift( 1, 0);
					func(chunk[i+7], x0+7, y);  shift( 1, 0);
					func(chunk[i+8], x0+8, y);  shift( 1, 0);
					func(chunk[i+9], x0+9, y);  shift( 1, 0);
					func(chunk[i+10],x0+10,y);  shift( 1, 0);
					func(chunk[i+11],x0+11,y);  shift(-11,1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift( 1, 0);
					func(chunk[i+6], x0+6, y);  shift( 1, 0);
					func(chunk[i+7], x0+7, y);  shift( 1, 0);
					func(chunk[i+8], x0+8, y);  shift( 1, 0);
					func(chunk[i+9], x0+9, y);  shift( 1, 0);
					func(chunk[i+10],x0+10,y);  shift( 1, 0);
					func(chunk[i+11],x0+11,y);  shift( 1, 0);
					func(chunk[i+12],x0+12,y);  shift(-12,1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift( 1, 0);
					func(chunk[i+6], x0+6, y);  shift( 1, 0);
					func(chunk[i+7], x0+7, y);  shift( 1, 0);
					func(chunk[i+8], x0+8, y);  shift( 1, 0);
					func(chunk[i+9], x0+9, y);  shift( 1, 0);
					func(chunk[i+10],x0+10,y);  shift( 1, 0);
					func(chunk[i+11],x0+11,y);  shift( 1, 0);
					func(chunk[i+12],x0+12,y);  shift( 1, 0);
					func(chunk[i+13],x0+13,y);  shift(-13,1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift( 1, 0);
					func(chunk[i+6], x0+6, y);  shift( 1, 0);
					func(chunk[i+7], x0+7, y);  shift( 1, 0);
					func(chunk[i+8], x0+8, y);  shift( 1, 0);
					func(chunk[i+9], x0+9, y);  shift( 1, 0);
					func(chunk[i+10],x0+10,y);  shift( 1, 0);
					func(chunk[i+11],x0+11,y);  shift( 1, 0);
					func(chunk[i+12],x0+12,y);  shift( 1, 0);
					func(chunk[i+13],x0+13,y);  shift( 1, 0);
					func(chunk[i+14],x0+14,y);  shift(-14,1);
				},
				function[chunk, x0, func, shift](y, i) {
					func(chunk[i],   x0,   y);  shift( 1, 0);
					func(chunk[i+1], x0+1, y);  shift( 1, 0);
					func(chunk[i+2], x0+2, y);  shift( 1, 0);
					func(chunk[i+3], x0+3, y);  shift( 1, 0);
					func(chunk[i+4], x0+4, y);  shift( 1, 0);
					func(chunk[i+5], x0+5, y);  shift( 1, 0);
					func(chunk[i+6], x0+6, y);  shift( 1, 0);
					func(chunk[i+7], x0+7, y);  shift( 1, 0);
					func(chunk[i+8], x0+8, y);  shift( 1, 0);
					func(chunk[i+9], x0+9, y);  shift( 1, 0);
					func(chunk[i+10],x0+10,y);  shift( 1, 0);
					func(chunk[i+11],x0+11,y);  shift( 1, 0);
					func(chunk[i+12],x0+12,y);  shift( 1, 0);
					func(chunk[i+13],x0+13,y);  shift( 1, 0);
					func(chunk[i+14],x0+14,y);  shift( 1, 0);
					func(chunk[i+15],x0+15,y);  shift(-15,1);
				},
			][x1-x0];
			
			if colFunc == null then return;
			
			shift(x0, y0);
			
			for var y in ry do
			{
				colFunc(y, i);	
				i+=16;
				
# 				for var x in rx	do
# 				{
# 					func(chunk[i], x, y);
# 					i += 1;
# 					shift(1, 0);
# 				}
# 				i += stride;
# 				shift(xback, 1);
			}
			
			shift(-x0, -y1);
		}
		
		
		function forEachBlock4(chunk, x0, y0, x1, y1, xOff, yOff, func, shift)
		{
			var stride = 16 + x0 - x1;
			var xback = -16+stride;
			var i = x0 + 16*y0;
			var rx = x0+xOff:x1+xOff, ry = y0+yOff:y1+yOff;
			var dx = x1-x0;
			if dx == 0 then return
			
			shift(x0, y0);
			
			if dx <= 8 then
			{
				if dx <= 4 then
				{
					if dx <= 2 then
					{
						if dx <= 1 then
						{
							for var y in ry do
							{
								func(chunk[i], x0, y); shift( 0, 1);
								
								i+=1;
							}
						}
						else # > 1
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift(-1, 1);
								
								i+=1;
							}
						}
					}
					else # > 2
					{
						if dx <= 3 then
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift(-2, 1);
								
								i+=1;
							}
						}
						else # > 3
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift(-3, 1);
								
								i+=1;
							}
						}
					}
				}
				else # > 4
				{
					if dx <= 6 then
					{
						if dx <= 5 then
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift(-4, 1);
								
								i+=1;
							}
						}
						else # > 5
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift(-5, 1);
								
								i+=1;
							}
						}
					}
					else # > 6
					{
						if dx <= 7 then
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift( 1, 0);
								func(chunk[i+6], x0+6, y);  shift(-6, 1);
								
								i+=1;
							}
						}
						else # > 7
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift( 1, 0);
								func(chunk[i+6], x0+6, y);  shift( 1, 0);
								func(chunk[i+7], x0+7, y);  shift(-7, 1);
								
								i+=1;
							}
						}
					}
				}
			}
			else # > 8
			{
				if dx <= 12 then
				{
					if dx <= 10 then
					{
						if dx <= 9 then
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift( 1, 0);
								func(chunk[i+6], x0+6, y);  shift( 1, 0);
								func(chunk[i+7], x0+7, y);  shift( 1, 0);
								func(chunk[i+8], x0+8, y);  shift(-8, 1);
								
								i+=1;
							}
						}
						else # > 9
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift( 1, 0);
								func(chunk[i+6], x0+6, y);  shift( 1, 0);
								func(chunk[i+7], x0+7, y);  shift( 1, 0);
								func(chunk[i+8], x0+8, y);  shift( 1, 0);
								func(chunk[i+9], x0+9, y);  shift(-9, 1);
								
								i+=1;
							}
						}
					}
					else # > 10
					{
						if dx <= 11 then
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift( 1, 0);
								func(chunk[i+6], x0+6, y);  shift( 1, 0);
								func(chunk[i+7], x0+7, y);  shift( 1, 0);
								func(chunk[i+8], x0+8, y);  shift( 1, 0);
								func(chunk[i+9], x0+9, y);  shift( 1, 0);
								func(chunk[i+10],x0+10,y);  shift(-10,1);
								
								i+=1;
							}
						}
						else # > 11
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift( 1, 0);
								func(chunk[i+6], x0+6, y);  shift( 1, 0);
								func(chunk[i+7], x0+7, y);  shift( 1, 0);
								func(chunk[i+8], x0+8, y);  shift( 1, 0);
								func(chunk[i+9], x0+9, y);  shift( 1, 0);
								func(chunk[i+10],x0+10,y);  shift( 1, 0);
								func(chunk[i+11],x0+11,y);  shift(-11,1);
								
								i+=1;
							}
						}
					}
				}
				else # > 12
				{
					if dx <= 14 then
					{
						if dx <= 13 then
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift( 1, 0);
								func(chunk[i+6], x0+6, y);  shift( 1, 0);
								func(chunk[i+7], x0+7, y);  shift( 1, 0);
								func(chunk[i+8], x0+8, y);  shift( 1, 0);
								func(chunk[i+9], x0+9, y);  shift( 1, 0);
								func(chunk[i+10],x0+10,y);  shift( 1, 0);
								func(chunk[i+11],x0+11,y);  shift( 1, 0);
								func(chunk[i+12],x0+12,y);  shift(-12,1);
								
								i+=1;
							}
						}
						else # > 13
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift( 1, 0);
								func(chunk[i+6], x0+6, y);  shift( 1, 0);
								func(chunk[i+7], x0+7, y);  shift( 1, 0);
								func(chunk[i+8], x0+8, y);  shift( 1, 0);
								func(chunk[i+9], x0+9, y);  shift( 1, 0);
								func(chunk[i+10],x0+10,y);  shift( 1, 0);
								func(chunk[i+11],x0+11,y);  shift( 1, 0);
								func(chunk[i+12],x0+12,y);  shift( 1, 0);
								func(chunk[i+13],x0+13,y);  shift(-13,1);
								
								i+=1;
							}
						}
					}
					else # > 14
					{
						if dx <= 15 then
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift( 1, 0);
								func(chunk[i+6], x0+6, y);  shift( 1, 0);
								func(chunk[i+7], x0+7, y);  shift( 1, 0);
								func(chunk[i+8], x0+8, y);  shift( 1, 0);
								func(chunk[i+9], x0+9, y);  shift( 1, 0);
								func(chunk[i+10],x0+10,y);  shift( 1, 0);
								func(chunk[i+11],x0+11,y);  shift( 1, 0);
								func(chunk[i+12],x0+12,y);  shift( 1, 0);
								func(chunk[i+13],x0+13,y);  shift( 1, 0);
								func(chunk[i+14],x0+14,y);  shift(-14,1);
								
								i+=1;
							}
						}
						else # > 15
						{
							for var y in ry do
							{
								func(chunk[i],   x0,   y);  shift( 1, 0);
								func(chunk[i+1], x0+1, y);  shift( 1, 0);
								func(chunk[i+2], x0+2, y);  shift( 1, 0);
								func(chunk[i+3], x0+3, y);  shift( 1, 0);
								func(chunk[i+4], x0+4, y);  shift( 1, 0);
								func(chunk[i+5], x0+5, y);  shift( 1, 0);
								func(chunk[i+6], x0+6, y);  shift( 1, 0);
								func(chunk[i+7], x0+7, y);  shift( 1, 0);
								func(chunk[i+8], x0+8, y);  shift( 1, 0);
								func(chunk[i+9], x0+9, y);  shift( 1, 0);
								func(chunk[i+10],x0+10,y);  shift( 1, 0);
								func(chunk[i+11],x0+11,y);  shift( 1, 0);
								func(chunk[i+12],x0+12,y);  shift( 1, 0);
								func(chunk[i+13],x0+13,y);  shift( 1, 0);
								func(chunk[i+14],x0+14,y);  shift( 1, 0);
								func(chunk[i+15],x0+15,y);  shift(-15,1);
								
								i+=1;
							}
						}
					}
				}
			}
			shift(-x0, -y1);
		}
	}
	
	function forEachBlock4(chunk, x0, y0, x1, y1, xOff, yOff, func, shift)
	{
		var stride = 16 + x0 - x1;
		var xback = -16+stride;
		var i = x0 + 16*y0;
		var xx0 = x0+xOff, ry = y0+yOff:y1+yOff;
		var dx = x1-x0;
		if dx == 0 then return;
		
		shift(x0, y0);
		
		if dx <= 8 then
		{
			if dx <= 4 then
			{
				if dx <= 2 then
				{
					if dx <= 1 then
					{
						for var y in ry do
						{
							func(chunk[i], xx0, y); shift( 0, 1);
							
							i+=16;
						}
					}
					else # > 1
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift(-1, 1);
							
							i+=16;
						}
					}
				}
				else # > 2
				{
					if dx <= 3 then
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift(-2, 1);
							
							i+=16;
						}
					}
					else # > 3
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift(-3, 1);
							
							i+=16;
						}
					}
				}
			}
			else # > 4
			{
				if dx <= 6 then
				{
					if dx <= 5 then
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift(-4, 1);
							
							i+=16;
						}
					}
					else # > 5
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift(-5, 1);
							
							i+=16;
						}
					}
				}
				else # > 6
				{
					if dx <= 7 then
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift( 1, 0);
							func(chunk[i+6], xx0+6, y);  shift(-6, 1);
							
							i+=16;
						}
					}
					else # > 7
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift( 1, 0);
							func(chunk[i+6], xx0+6, y);  shift( 1, 0);
							func(chunk[i+7], xx0+7, y);  shift(-7, 1);
							
							i+=16;
						}
					}
				}
			}
		}
		else # > 8
		{
			if dx <= 12 then
			{
				if dx <= 10 then
				{
					if dx <= 9 then
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift( 1, 0);
							func(chunk[i+6], xx0+6, y);  shift( 1, 0);
							func(chunk[i+7], xx0+7, y);  shift( 1, 0);
							func(chunk[i+8], xx0+8, y);  shift(-8, 1);
							
							i+=16;
						}
					}
					else # > 9
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift( 1, 0);
							func(chunk[i+6], xx0+6, y);  shift( 1, 0);
							func(chunk[i+7], xx0+7, y);  shift( 1, 0);
							func(chunk[i+8], xx0+8, y);  shift( 1, 0);
							func(chunk[i+9], xx0+9, y);  shift(-9, 1);
							
							i+=16;
						}
					}
				}
				else # > 10
				{
					if dx <= 11 then
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift( 1, 0);
							func(chunk[i+6], xx0+6, y);  shift( 1, 0);
							func(chunk[i+7], xx0+7, y);  shift( 1, 0);
							func(chunk[i+8], xx0+8, y);  shift( 1, 0);
							func(chunk[i+9], xx0+9, y);  shift( 1, 0);
							func(chunk[i+10],xx0+10,y);  shift(-10,1);
							
							i+=16;
						}
					}
					else # > 11
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift( 1, 0);
							func(chunk[i+6], xx0+6, y);  shift( 1, 0);
							func(chunk[i+7], xx0+7, y);  shift( 1, 0);
							func(chunk[i+8], xx0+8, y);  shift( 1, 0);
							func(chunk[i+9], xx0+9, y);  shift( 1, 0);
							func(chunk[i+10],xx0+10,y);  shift( 1, 0);
							func(chunk[i+11],xx0+11,y);  shift(-11,1);
							
							i+=16;
						}
					}
				}
			}
			else # > 12
			{
				if dx <= 14 then
				{
					if dx <= 13 then
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift( 1, 0);
							func(chunk[i+6], xx0+6, y);  shift( 1, 0);
							func(chunk[i+7], xx0+7, y);  shift( 1, 0);
							func(chunk[i+8], xx0+8, y);  shift( 1, 0);
							func(chunk[i+9], xx0+9, y);  shift( 1, 0);
							func(chunk[i+10],xx0+10,y);  shift( 1, 0);
							func(chunk[i+11],xx0+11,y);  shift( 1, 0);
							func(chunk[i+12],x0+12,y);  shift(-12,1);
							
							i+=16;
						}
					}
					else # > 13
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift( 1, 0);
							func(chunk[i+6], xx0+6, y);  shift( 1, 0);
							func(chunk[i+7], xx0+7, y);  shift( 1, 0);
							func(chunk[i+8], xx0+8, y);  shift( 1, 0);
							func(chunk[i+9], xx0+9, y);  shift( 1, 0);
							func(chunk[i+10],xx0+10,y);  shift( 1, 0);
							func(chunk[i+11],xx0+11,y);  shift( 1, 0);
							func(chunk[i+12],xx0+12,y);  shift( 1, 0);
							func(chunk[i+13],xx0+13,y);  shift(-13,1);
							
							i+=16;
						}
					}
				}
				else # > 14
				{
					if dx <= 15 then
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift( 1, 0);
							func(chunk[i+6], xx0+6, y);  shift( 1, 0);
							func(chunk[i+7], xx0+7, y);  shift( 1, 0);
							func(chunk[i+8], xx0+8, y);  shift( 1, 0);
							func(chunk[i+9], xx0+9, y);  shift( 1, 0);
							func(chunk[i+10],xx0+10,y);  shift( 1, 0);
							func(chunk[i+11],xx0+11,y);  shift( 1, 0);
							func(chunk[i+12],xx0+12,y);  shift( 1, 0);
							func(chunk[i+13],xx0+13,y);  shift( 1, 0);
							func(chunk[i+14],xx0+14,y);  shift(-14,1);
							
							i+=16;
						}
					}
					else # > 15
					{
						for var y in ry do
						{
							func(chunk[i],   xx0,   y);  shift( 1, 0);
							func(chunk[i+1], xx0+1, y);  shift( 1, 0);
							func(chunk[i+2], xx0+2, y);  shift( 1, 0);
							func(chunk[i+3], xx0+3, y);  shift( 1, 0);
							func(chunk[i+4], xx0+4, y);  shift( 1, 0);
							func(chunk[i+5], xx0+5, y);  shift( 1, 0);
							func(chunk[i+6], xx0+6, y);  shift( 1, 0);
							func(chunk[i+7], xx0+7, y);  shift( 1, 0);
							func(chunk[i+8], xx0+8, y);  shift( 1, 0);
							func(chunk[i+9], xx0+9, y);  shift( 1, 0);
							func(chunk[i+10],xx0+10,y);  shift( 1, 0);
							func(chunk[i+11],xx0+11,y);  shift( 1, 0);
							func(chunk[i+12],xx0+12,y);  shift( 1, 0);
							func(chunk[i+13],xx0+13,y);  shift( 1, 0);
							func(chunk[i+14],xx0+14,y);  shift( 1, 0);
							func(chunk[i+15],xx0+15,y);  shift(-15,1);
							
							i+=16;
						}
					}
				}
			}
		}
		shift(-x0, -y1);
	}
	
	
	var forEachBlock = forEachBlock0;
	
	
}