#[section] blocks
# TODO cleanup and move texture section into this file
namespace vanilla
{
	use namespace blocks; # TODO: remove blocks namespace completely
	
	namespace colors
	{
		var logColor =     [0.5, 0.2, 0.1]; #[0.6, 0.3, 0.2]; #[0.7, 0.5, 0.1];
		var dryDirtColor = [0.7, 0.5, 0.3];
		var nrmDirtColor = [0.6, 0.4, 0.25];
		var wetDirtColor = [0.5, 0.3, 0.2];
	}
	use namespace colors;
	
	var AIR = registerBlock(" ", Block(texture.sky, drop=false, solid=false));
	
	var COBBLE_STONE = registerBlock("p", Block(texture.cobblestone([0.6, 0.6, 0.6])));
	var STONE = registerBlock("s", Block(texture.stone([0.6, 0.6, 0.6]), drop=COBBLE_STONE));
	
	var DIRT  = registerBlock("d", Block(texture.dirt(dryDirtColor)));
	var GRASS = registerBlock("g", Block(texture.grown([0.2, 0.7, 0.3], DIRT.texture), drop=DIRT));
	
	var PLANKS     = registerBlock("w", Block(texture.planks([0.8, 0.7, 0.5])));
	var LOG        = registerBlock("W", Block(texture.log(logColor), solid=false));
	var SAPLING    = registerBlock("t", Block(texture.sapling(logColor, [0.2, 0.7, 0.3], AIR.texture), solid=false));
	var LEAVES     = registerBlock("l", Block(texture.leaves([0.2, 0.7, 0.3], AIR.texture), SAPLING, 0.25, solid=false));
	var LOG_LEAVES = registerBlock("L", Block(texture.leaves([0.2, 0.7, 0.3], LOG.texture), LOG, solid=false));
	
	var CRAFTING_TABLE = registerBlock("T", Block(
		texture=texture.craftingTable([0.8, 0.7, 0.5], AIR.texture),
		solid=false
	));
	var CHEST = registerBlock("C", Block(
		texture=texture.chest([0.8, 0.7, 0.5]),
		solid=false
	));
	
	
	var GLASS = registerBlock("_", Block(texture.glass(AIR.texture)));
	
	var BRICKS = registerBlock("#", Block(texture.bricks([1.0, 0.9, 0.8], [0.8, 0.1, 0.2])));
	
	
	var COAL_ORE = registerBlock("c", Block(texture.ore([0.1, 0.1, 0.1], STONE.texture)));
	
	var SAND = registerBlock("S", Block(texture.solid([0.9, 0.8, 0.5])));
	var WATER = registerBlock("~", Block(texture.solid([0.1, 0.2, 0.9]), solid=false));
	
	
	function isSoil(b) {
		return b == DIRT or b == GRASS;
	}
}
# namespace blocks









#[section] blockBehavior
namespace vanilla
{

	function growTree(x, y)
	{
		if theWorld.getBlock(x, y-1) != vanilla.AIR then return;
		theWorld.setBlock(x, y, vanilla.LOG);
		
		
		var tree = [" ### ",
					"#####",
					"##%##",
					"##%##",
					" #%# ",
					"  |  ",
					"  |  ",
					"  |  "];

		var mapTree = {"#": vanilla.LEAVES,
					   "|": vanilla.LOG,
					   "%": vanilla.LOG_LEAVES};

		var xx, yy;

		yy=y-8;
		for var r in tree do
		{
			xx=x-2;
			for var b in r.split("") do
			{
				if mapTree.has(b) then
				{
					
					var blk = mapTree[b];
					var wblk = theWorld.getBlock(xx, yy);
				
					if wblk == vanilla.AIR then
						theWorld.setBlock(xx, yy, blk);
					else if blk == vanilla.LEAVES and wblk == vanilla.LOG then
						theWorld.setBlock(xx, yy, vanilla.LOG_LEAVES);
					else if blk == vanilla.LOG and wblk == vanilla.LEAVES then
						theWorld.setBlock(xx, yy, vanilla.LOG_LEAVES);
					else if blk == vanilla.LOG_LEAVES and wblk == vanilla.LOG then
						theWorld.setBlock(xx, yy, vanilla.LOG_LEAVES);
					else if blk == vanilla.LOG_LEAVES and wblk == vanilla.LEAVES then
						theWorld.setBlock(xx, yy, vanilla.LOG_LEAVES);
						
						
				}
				xx+=1;
			}
			yy+=1;
		}	
	}
	
	vanilla.SAPLING.tick = function(x, y)
	{
		growTree(x, y);
	};
	
	
	vanilla.DIRT.tick = function(x, y)
	{
		if not theWorld.getBlock(x, y-1).solid then
		{
			for var xx in [x-1, x+1] do
			for var yy in  y-1: y+2  do
			{
				if theWorld.getBlock(xx, yy) == vanilla.GRASS then
				{
					theWorld.setBlock(x, y, vanilla.GRASS);
					return;
				}
			}
		}
	};
	
	vanilla.GRASS.tick = function(x, y)
	{
		if theWorld.getBlock(x, y-1).solid then
			theWorld.setBlock(x, y, vanilla.DIRT);
	};
	
	
	vanilla.SAPLING.place = function(x, y)
	{
		var placeable = vanilla.isSoil(theWorld.getBlock(x, y+1));
		if placeable then
			theWorld.setBlockUpdate(x, y, vanilla.SAPLING);
			
		return placeable;
	};
	
	vanilla.WATER.update = function(x, y)
	{
		if theWorld.getBlock(x, y+1) == vanilla.AIR then
		{
			theWorld.setBlock(x, y, vanilla.AIR);
			theWorld.setBlock(x, y+1, vanilla.WATER);
			theWorld.updateNeighbors(x, y);
			#world.updateNeighbors(x, y+1);
			return;
		}
		
		var pm = 1; if math.random() < 0.5 then pm=-1;
		for var i in 0:2 do
		{
			if theWorld.getBlock(x+pm, y) == vanilla.AIR then
			{
				if theWorld.getBlock(x+pm, y+1) == vanilla.AIR then
				{
					theWorld.setBlockUpdate(x, y, vanilla.AIR);
					theWorld.setBlockUpdate(x+pm, y+1, vanilla.WATER);
					return;
				}
				
				theWorld.setBlock(x, y, vanilla.AIR);
				theWorld.setBlock(x+pm, y, vanilla.WATER);
				theWorld.update(x, y-1);
				theWorld.update(x, y);
				theWorld.update(x+pm, y);
				theWorld.update(x-pm, y);
# 				theWorld.update(x, y-1);
# 				if math.random() < 0.99 then
# 				{
# 					theWorld.updateNeighbors(x, y);
# 					theWorld.updateNeighbors(x+pm, y);
# 				}
				return;
			}
			pm = -pm;
		}
	};
	vanilla.WATER.tick=vanilla.WATER.update;
	
	
	vanilla.SAND.update = function(x, y)
	{
		if theWorld.getBlock(x, y+1) == vanilla.AIR then
		{
			theWorld.setBlockUpdate(x, y, vanilla.AIR);
			theWorld.setBlockUpdate(x, y+1, vanilla.SAND);
			return;
		}
		
		var pm = 1; if math.random() < 0.5 then pm=-1;
		for var i in 0:Integer(math.random()*2)+1 do
		{
			if theWorld.getBlock(x+pm, y) == vanilla.AIR then
			{
				if theWorld.getBlock(x+pm, y+1) == vanilla.AIR then
				{
					theWorld.setBlockUpdate(x, y, vanilla.AIR);
					theWorld.setBlockUpdate(x+pm, y+1, vanilla.SAND);
					return;
				}
	# 			else
	# 			{
	# 				theWorld.setBlock(x, y, vanilla.AIR);
	# 				theWorld.setBlock(x+pm, y, vanilla.SAND);
	# 				theWorld.update(x, y-1);
	# 				if math.random() < 0.5 then
	# 				{
	# 					theWorld.updateNeighbors(x, y);
	# 					theWorld.updateNeighbors(x+pm, y);
	# 				}
	# 			}
			}
			pm = -pm;
		}
	};
	vanilla.SAND.tick = vanilla.SAND.update;
	
	
	vanilla.CRAFTING_TABLE.onClick=function(x, y)
	{
		# TODO Open crafting gui here	
		gui.setModal(gui.GuiCraftingInventory(
			"Crafting Table",
			thePlayer,
			inventory.slots,
			inventory.hotbarSize, 
			inventory.backpackSize,
			3, 3
		));
	};
	
	
	vanilla.CHEST.onClick=function(x, y)
	{
		# TODO Open crafting gui here	
		gui.setModal(gui.GuiContainerInventory(
			"Chest",
			thePlayer,
			inventory.slots,
			inventory.hotbarSize, 
			inventory.backpackSize,
			Array(10*3),
			10, 3
		));
	};
}
